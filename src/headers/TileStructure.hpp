#pragma once

#include "Sprite.hpp"

namespace gw {

class TileStructure : public Sprite
{
public:

////////////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////////////////////////

    TileStructure(std::string filePath, Vector2u cellSize = Vector2u(0, 0));

    TileStructure(std::string filePath, int cellSizeX = 1, int cellSizeY = 1);

    // Copy constructor
    TileStructure(const TileStructure& other);

///////////////////////////////////////////////////////////////////////////////////////////////////
// Mutators 
///////////////////////////////////////////////////////////////////////////////////////////////////

    void asRow(int length);
    void asColumn(int height);
    void asRectangle(int length, int height, bool fill);
    void asCircle(int radius, bool fill);
    /*void setPositionRelativeTo();*/

private:

///////////////////////////////////////////////////////////////////////////////////////////////////
// Private Methods 
///////////////////////////////////////////////////////////////////////////////////////////////////

    // Implementation of pure virtual function for SFML drawing
    void draw(sf::RenderTarget& target, sf::RenderStates states) const override;

///////////////////////////////////////////////////////////////////////////////////////////////////
// Private Members 
///////////////////////////////////////////////////////////////////////////////////////////////////

    std::vector<Vector2u> tiles;    // The local coordinates of each tile in the structure
};

} // namespace gw