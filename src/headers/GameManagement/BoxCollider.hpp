#pragma once

#include "Collider.hpp"

namespace gw {

class BoxCollider : public Collider
{
public:

///////////////////////////////////////////////////////////////////////////////////////////////////
// Constructors 
///////////////////////////////////////////////////////////////////////////////////////////////////

    BoxCollider(std::function<void(Sprite& sprite, Sprite& collidedWith, Vector2f collision)>
        handleCollision, bool pushOut = false);

///////////////////////////////////////////////////////////////////////////////////////////////////
// Collision Methods 
///////////////////////////////////////////////////////////////////////////////////////////////////

    /// Returns number of pixels in which sprite1 is colliding with sprite2 using AABB collision
    static gw::Vector2f axisAlignedBoxCollision(gw::Sprite& sprite1, gw::Sprite& sprite2);

private:

///////////////////////////////////////////////////////////////////////////////////////////////////
// Private Methods 
///////////////////////////////////////////////////////////////////////////////////////////////////

    // Implementation of pure virtual function from Collider
    virtual gw::Vector2f checkCollision(gw::Sprite& sprite1, gw::Sprite& sprite2) override;
};

} // namespace gw