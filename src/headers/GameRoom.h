#pragma once

#include "Sprite.h"
#include "AnimatedSprite.h"

namespace gw {

/// A single room node in the GameMap
class GameRoom
{
public:

////////////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////////////////////////

    GameRoom(std::string name = "No name");

    ~GameRoom();

////////////////////////////////////////////////////////////////////////////////////////////////////
// Mutators
////////////////////////////////////////////////////////////////////////////////////////////////////

    GameRoom& addSprite(Sprite& sprite);
    GameRoom& addSprite(AnimatedSprite& animSprite);

////////////////////////////////////////////////////////////////////////////////////////////////////
// Accessors
////////////////////////////////////////////////////////////////////////////////////////////////////

    const std::vector<Sprite*>& spriteList() const { return sprites; }
    const std::vector<AnimatedSprite*>& animatedSpriteList() const { return animSprites; }

////////////////////////////////////////////////////////////////////////////////////////////////////
// Public Members
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    std::string roomName;
    // Connections to other GameRooms //
    GameRoom* top;
    GameRoom* bottom;
    GameRoom* left;
    GameRoom* right;

private:

////////////////////////////////////////////////////////////////////////////////////////////////////
// Private Members
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    // References to all the sprites that exist in this GameRoom //
    std::vector<Sprite*> sprites;
    std::vector<AnimatedSprite*> animSprites;
};

} // namespace gw