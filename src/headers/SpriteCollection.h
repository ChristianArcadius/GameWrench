#pragma once

#include "AnimatedSprite.hpp"

namespace gw
{

/// Container for a large group of related Sprites.
class SpriteCollection
{
    

////////////////////////////////////////////////////////////////////////////////////////////////////
// Mutators
////////////////////////////////////////////////////////////////////////////////////////////////////

    SpriteCollection& addSprite(Sprite& sprite);
    SpriteCollection& addSprite(AnimatedSprite& animSprite);
    SpriteCollection& addCollection(SpriteCollection& collection);


////////////////////////////////////////////////////////////////////////////////////////////////////
// Accessors
////////////////////////////////////////////////////////////////////////////////////////////////////

    const std::vector<Sprite*>& spriteList() const { return sprites; }
    const std::vector<AnimatedSprite*>& animatedSpriteList() const { return animSprites; }

private:

////////////////////////////////////////////////////////////////////////////////////////////////////
// Private Members
////////////////////////////////////////////////////////////////////////////////////////////////////

    // References to all the sprites that exist in this Collection //
    std::vector<Sprite*> sprites;
    std::vector<AnimatedSprite*> animSprites;
};

} // namespace gw